---
import "../styles/fonts.css";

interface Props {
	title: string;
        description: string;
        isHome: boolean;
        isResume: boolean;
        isBook: boolean;
        isPubs: boolean;
        isConf: boolean;
        isHonor: boolean;
}

const {title, description, isHome, isResume, isBook, isPubs, isConf, isHonor} = Astro.props;
---

<script>
import { $page } from "../store/store.ts";
const homeelem = document.querySelector('.pagehome');
const resumeelem = document.querySelector('.pageresume');
const bookelem = document.querySelector('.pagebook');
const pubelem = document.querySelector('.pagepub');
const confelem = document.querySelector('.pageconf');
const honorelem = document.querySelector('.pagehonor');
const myMap = new Map([
   ['home', homeelem],
   ['resume', resumeelem],
   ['book', bookelem],
   ['publications', pubelem],
   ['conferences', confelem],
   ['honors', honorelem]
]);
const pages: string[] = ["home", "resume", "book", "publications", "conferences", "honors"];

let pageno: number = parseInt($page.get()!);
const drawer = document.querySelector(".drawer");

const pagetype: string = drawer!.getAttribute("data-page")!;

if (pagetype == "home" && pageno != 1) {
   $page.set("1");
}

if (pagetype == "cv" && pageno < 2 || pageno > 6) {
   $page.set("2");
}

homeelem!.addEventListener("click", () => {
  $page.set("1");
});

resumeelem!.addEventListener("click", () => {
  $page.set("2");
});

bookelem!.addEventListener("click", () => {
  $page.set("3");
});

pubelem!.addEventListener("click", () => {
  $page.set("4");
});

confelem!.addEventListener("click", () => {
  $page.set("5");
});

honorelem!.addEventListener("click", () => {
  $page.set("6");
});

for (let i=1; i<7; i++) {
   let mappage = myMap.get(pages[i-1]!);
   if (i == parseInt($page.get()!)) {
     if (mappage!.classList.contains('navlink')) {
        mappage!.classList.remove('navlink');
     }
     mappage!.classList.add('myactive');
   } else {
     if (mappage!.classList.contains('myactive')) {
        mappage!.classList.remove('myactive');
     }
     mappage!.classList.add('navlink');
   }
}

$page.subscribe((page) => {
  for (let i=1; i<7; i++) {
     let mappage = myMap.get(pages[i-1]!);
     if (i == parseInt(page!)) {
       if (mappage!.classList.contains('navlink')) {
          mappage!.classList.remove('navlink');
       }
       mappage!.classList.add('myactive');
     } else {
       if (mappage!.classList.contains('myactive')) {
          mappage!.classList.remove('myactive');
       }
       mappage!.classList.add('navlink');
     }
  }
})

</script>


<!doctype html>
<html lang="en">
<head>
	<meta charset="UTF-8" />
	<meta name="description" content={description} />
	<meta name="viewport" content="width=device-width" />
	<title>{title}</title>
</head>

<body>
  <div class="drawer lg:drawer-open" data-page={isHome ? "home" : "cv"} >
    <input id="my-drawer-2" type="checkbox" class="drawer-toggle" />
    <div class="drawer-content">
          <slot />
    </div>
    <div class="flex-none lg:hidden justify-left">
         <label for='my-drawer-2' class="btn btn-square drawer-button btn-ghost">
               <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-6 h-6 stroke-current">
                 <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
               </svg>
        </label>
    </div>
    <div class="drawer-side">
       <label for="my-drawer-2" aria-label="close sidebar" class="drawer-overlay"></label>
       <div class="min-h-full">
         <div class="h-6 w-52 bg-base-200">
         </div>
       <div class="menulist border-r-2 border-black/100 bg-base-200">
         <ul class="menu text-2xl bg-base-200 w-52 p-4 [&_li>*]:rounded-none">
           <li><a class:list={["menuitem pagehome", {"navlink": !isHome}, {"myactive": isHome}]} href="/">Home</a></li>
           <li><a class:list={["menuitem pageresume"]} href="/cv/index.html">Resume</a></li>
           <li><a class:list={["menuitem pagebook"]}  href="/cv/index.html#book">Book</a></li>
           <li><a class:list={["menuitem pagepub"]} href="/cv/index.html#journal-publications">Publications</a></li>
           <li><a class:list={["menuitem pageconf"]} href="/cv/index.html#refereed-conference-proceedings">Conferences</a></li>
           <li><a class:list={["menuitem pagehonor"]} href="/cv/index.html#honors">Honors</a></li> 
         </ul>
       </div>
       <div class="h-6 w-75 bg-base-200">
       </div>
    </div>
  </div>

</body>
</html>
<style is:global>
@tailwind base;
@tailwind components;
@tailwind utilities;
@layer base {
  html {
    font-family: "Noto Sans", system-ui, sans-serif;
  }
}
        a.menuitem.navlink:hover, a.menuitem.navlink:active {
             @apply text-primary;
             @apply bg-base-200;
        }
        a.menuitem.myactive, a.menuitem.myactive:hover {
             @apply bg-gray-600;
             @apply text-white;
             /*cursor: default;*/
        }
        .menulist {
             min-height: calc(100vh - 3rem);
        }
</style>
